version: '3.8'

services:
  translate:
    build: translate
    ports:
      - 8000:8000
    depends_on:
      - mule
      - react
      - camunda
      - django1
      - django2
    volumes:
      - ./translate:/app

  mule:
    image: wslph/mule:4.4.0-ee
    ports:
      - 8081:8081
    restart: always
    volumes:
      - ./mulesoft/apps:/opt/mule/apps
      - ./mulesoft/compiled_mulesoft:/opt/mule/compiled_mulesoft
      - ./mulesoft/logs:/opt/mule/am/logs
    environment:
      - MULE_ENV=dev

  react:
    build: frontend
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./frontend:/app

  camunda:
    image: maven:latest
    ports:
      - 8080:8080
    working_dir: /app
    volumes:
      - ./camunda:/app
    # command: mvn clean package spring-boot:run # for development
    command: java -jar target/partyOrganizer.jar

  django1:
    build: backend
    ports:
      - 8001:8000
    restart: always
    volumes:
      - ./backend:/app
    depends_on:
      postgres1:
        condition: service_healthy
    environment:
      - DJANGO_SECRET_KEY=very_secret_key
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=app.settings1
      - POSTGRES_DB=django1
      - POSTGRES_USER=django1
      - POSTGRES_PASSWORD=django1
      - POSTGRES_HOST=postgres1
      - POSTGRES_PORT=5432

  django2:
    build: backend
    ports:
      - 8002:8000
    restart: always
    volumes:
      - ./backend:/app
    depends_on:
      postgres2:
        condition: service_healthy

    environment:
      - DJANGO_SECRET_KEY=very_secret_key
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=app.settings2
      - POSTGRES_DB=django2
      - POSTGRES_USER=django2
      - POSTGRES_PASSWORD=django2
      - POSTGRES_HOST=postgres2
      - POSTGRES_PORT=5432

  postgres1:
    image: postgres:13
    volumes:
      - "database:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: django1
      POSTGRES_USER: django1
      POSTGRES_PASSWORD: django1
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -q -U django1 -d django1 || exit 1
      interval: 3s
      timeout: 3s
      retries: 10

  postgres2:
    image: postgres:13
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: django2
      POSTGRES_USER: django2
      POSTGRES_PASSWORD: django2
    ports:
      - 5433:5432
    healthcheck:
      test: pg_isready -q -U django2 -d django1 || exit 1
      interval: 3s
      timeout: 3s
      retries: 10

volumes:
  database: {}
